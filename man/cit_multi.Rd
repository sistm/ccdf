% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cit_multi.R
\name{cit_multi}
\alias{cit_multi}
\title{Main function to perform complex hypothesis testing using (un)conditional independence test}
\usage{
cit_multi(
  exprmat = NULL,
  variable2test = NULL,
  covariate = NULL,
  test = c("asymptotic", "permutation"),
  n_perm = 100,
  n_perm_adaptive = c(n_perm, n_perm, n_perm * 3, n_perm * 5),
  thresholds = c(0.1, 0.05, 0.01),
  parallel = TRUE,
  n_cpus = NULL,
  adaptive = FALSE,
  space_y = TRUE,
  number_y = 10
)
}
\arguments{
\item{exprmat}{a data frame of size \code{G x n} containing the
preprocessed expressions from \code{n} samples (or cells) for \code{G}
genes. Default is \code{NULL}.}

\item{variable2test}{a data frame of numeric or factor vector(s) 
of size \code{n} containing the variable(s) to be tested (the condition(s))}

\item{covariate}{a data frame of numeric or factor vector(s) 
of size \code{n} containing the covariate(s)}

\item{test}{a character string indicating wether the \code{'asymptotic'} or 
\code{'permutation'} test is computed.
Default is \code{'asymptotic'}.}

\item{n_perm}{the number of permutations. Default is \code{100}. Only used if
\code{test == 'permutation'}.}

\item{n_perm_adaptive}{a vector of the increasing numbers of 
adaptive permutations when \code{adaptive} is \code{TRUE}. 
\code{length(n_perm_adaptive)} should be equal to \code{length(thresholds)+1}. 
Default is \code{c(100, 150, 250, 500)}.}

\item{thresholds}{a vector of the decreasing thresholds to compute
adaptive permutations when \code{adaptive} is \code{TRUE}. 
\code{length(thresholds)} should be equal to \code{length(n_perm_adaptive)-1}.
Default is \code{c(0.1, 0.05, 0.01)}.}

\item{parallel}{a logical flag indicating whether parallel computation
should be enabled. Default is \code{TRUE}.}

\item{n_cpus}{an integer indicating the number of cores to be used for the computations.
Default is \code{parallel::detectCores() - 1}. If \code{n_cpus = 1}, then sequential 
computations are used without any parallelization.}

\item{adaptive}{a logical flag indicating whether adaptive permutations
should be performed. Default is \code{FALSE}. Only used if
\code{test == 'permutation'}.}

\item{space_y}{a logical flag indicating whether the y thresholds are spaced. 
When \code{space_y} is \code{TRUE}, a regular sequence between the minimum and 
the maximum of the observations is used. If \code{FALSE}, each unique 
observed expression value is used as a distinct threshold. Default is \code{TRUE}.}

\item{number_y}{an integer value indicating the number of y thresholds (and therefore
the number of regressions) to perform the test. Default is 10.}
}
\value{
A list with the following elements:\itemize{
  \item \code{which_test}: a character string carrying forward the value of
  the '\code{which_test}' argument indicating which test was performed (either
  'asymptotic' or 'permutation').
  \item \code{n_perm}: an integer carrying forward the value of the
  '\code{n_perm}' argument or '\code{n_perm_adaptive}' indicating the number of permutations performed
  (\code{NA} if asymptotic test was performed).
  \item \code{pval}: computed p-values. A data frame with one raw for
  each gene, and with 2 columns: the first one '\code{raw_pval}' contains
  the raw p-values, the second one '\code{adj_pval}' contains the FDR adjusted p-values
  using Benjamini-Hochberg correction.
}
}
\description{
Main function to perform complex hypothesis testing using (un)conditional independence test
}
\examples{

ncells <- 100
pgenes <- 500
X1 <- as.factor(rbinom(n=ncells, size = 1, prob = 0.5))
Y <- t(replicate(pgenes, ((X1==1)*rnorm(n = ncells,0,1)) + ((X1==0)*rnorm(n = ncells, 0.5, 1))))
X2 <- rnorm(n=ncells)
X3 <- rnorm(n=ncells)
Z1 <- rnorm(ncells)
Z2 <- as.factor(rbinom(n=ncells, size=1, prob = 0.5))

res_asymp <- cit_multi(exprmat=data.frame(Y=Y), 
                variable2test=data.frame(X1=X3, X2 = X2), 
                covariate = data.frame(Z1 = Z1, Z2 = Z2),
                test="asymptotic", n_cpus=1, parallel=FALSE)
hist(res_asymp$pvals$raw_pval) # asymptotic test
}
\references{
Gauthier M, Agniel D, ThiÃ©baut R & Hejblum BP (2019).
Distribution-free complex hypothesis testing for single-cell RNA-seq differential expression analysis, *bioRxiv* 445165.
[DOI: 10.1101/2021.05.21.445165](https://doi.org/10.1101/2021.05.21.445165).
}
